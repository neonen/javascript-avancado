{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","result","reject","request","transaction","objectStore","add","onsuccess","onerror","e","console","log","target","error","cursor","openCursor","negociacoes","atual","dados","value","push","Negociacao","_data","_quantidade","_valor","continue","erro","name","clear"],"mappings":";;;;;;;;;AAAA;;;;IAEaA,a,WAAAA,a;AACT,2BAAYC,UAAZ,EAAuB;AAAA;;AACnB,aAAKC,WAAL,GAAmBD,UAAnB;AACA,aAAKE,MAAL,GAAc,aAAd;AACH;;;;iCAEQC,U,EAAW;AAAA;;AAChB,mBAAO,IAAIC,OAAJ,CAAY,UAACC,MAAD,EAAQC,MAAR,EAAmB;AAClC,oBAAIC,UAAU,MAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,MAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,MAAKP,MADR,EAETQ,GAFS,CAELP,UAFK,CAAd;;AAIII,wBAAQI,SAAR,GAAoB,aAAK;AACrBN;AACH,iBAFD;;AAIAE,wBAAQK,OAAR,GAAkB,UAACC,CAAD,EAAO;AACrBC,4BAAQC,GAAR,CAAYF,EAAEG,MAAF,CAASC,KAArB;AACAX,2BAAO,uCAAP;AACH,iBAHD;AAIP,aAbM,CAAP;AAcH;;;qCAEW;AAAA;;AACR,mBAAO,IAAIF,OAAJ,CAAY,UAACC,MAAD,EAAQC,MAAR,EAAmB;;AAElC,oBAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,OAAKN,MADT,EACgB,WADhB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKI,oBAAIC,cAAc,EAAlB;;AAEAF,uBAAOP,SAAP,GAAmB,aAAI;AACnB,wBAAIU,QAAQR,EAAEG,MAAF,CAASX,MAArB;;AAEA,wBAAGgB,KAAH,EAAS;AACL,4BAAIC,QAAQD,MAAME,KAAlB;;AAEAH,oCAAYI,IAAZ,CAAiB,IAAIC,sBAAJ,CAAeH,MAAMI,KAArB,EAA2BJ,MAAMK,WAAjC,EAA6CL,MAAMM,MAAnD,CAAjB;;AAEAP,8BAAMQ,QAAN;AACH,qBAND,MAMK;AACDxB,+BAAOe,WAAP;AACH;AACJ,iBAZD;AAaAF,uBAAON,OAAP,GAAiB,aAAI;AACjBN,2BAAOO,EAAEG,MAAF,CAASc,IAAT,CAAcC,IAArB;AACH,iBAFD;AAGP,aAzBM,CAAP;AA0BH;;;qCAEW;AAAA;;AACR,mBAAO,IAAI3B,OAAJ,CAAY,UAACC,MAAD,EAAQC,MAAR,EAAmB;AAClC,oBAAIC,UAAU,OAAKN,WAAL,CAAiBO,WAAjB,CAA6B,CAAC,OAAKN,MAAN,CAA7B,EAA4C,WAA5C,EACTO,WADS,CACG,OAAKP,MADR,EAET8B,KAFS,EAAd;;AAIIzB,wBAAQI,SAAR,GAAoB;AAAA,2BAAKN,OAAO,kCAAP,CAAL;AAAA,iBAApB;AACAE,wBAAQK,OAAR,GAAkB;AAAA,2BAAKN,OAAO,+BAAP,CAAL;AAAA,iBAAlB;AACP,aAPM,CAAP;AAQH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from '../models/Negociacao';\n\nexport class NegociacaoDao {\n    constructor(connection){\n        this._connection = connection;\n        this._store = 'negociacoes';\n    }\n\n    adiciona(negociacao){\n        return new Promise((result,reject) => {\n            let request = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .add(negociacao);\n\n                request.onsuccess = e => {\n                    result();\n                }\n\n                request.onerror = (e) => {\n                    console.log(e.target.error);\n                    reject(\"Não foi possivel adicionar Negociação\");\n                }\n        });\n    }\n\n    listaTodos(){\n        return new Promise((result,reject) => {\n\n            let cursor = this._connection\n                .transaction(this._store,'readwrite')\n                .objectStore(this._store)\n                .openCursor();\n\n                let negociacoes = [];\n\n                cursor.onsuccess = e =>{\n                    let atual = e.target.result;\n                    \n                    if(atual){\n                        let dados = atual.value;\n                        \n                        negociacoes.push(new Negociacao(dados._data,dados._quantidade,dados._valor));\n                        \n                        atual.continue();\n                    }else{\n                        result(negociacoes);\n                    }\n                }\n                cursor.onerror = e =>{\n                    reject(e.target.erro.name);\n                }\n        })\n    }\n\n    apagaTodos(){\n        return new Promise((result,reject) => {\n            let request = this._connection.transaction([this._store], 'readwrite')\n                .objectStore(this._store)\n                .clear();\n\n                request.onsuccess = e => result('Negociações apagadas com sucesso');\n                request.onerror = e => reject('Erro ao apagar as Negociações');\n        })\n    }\n}"]}